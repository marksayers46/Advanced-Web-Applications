{"ast":null,"code":"var _jsxFileName = \"/Users/marks/lambdaschool2/Advanced-Web-Applications/animals/src/components/AnimalForm.js\";\nimport React, { useState } from \"react\";\nconst initialAnimal = {\n  name: '',\n  sound: '',\n  classification: {\n    species: ''\n  }\n};\nexport default function AnimalForm({\n  animals,\n  updateAnimals\n}) {\n  const [updating, setUpdating] = useState(false);\n  const [animalToUpdate, setAnimalToUpdate] = useState(initialAnimal);\n\n  const editAnimal = animal => {\n    setUpdating(true);\n    setAnimalToUpdate(animal);\n  };\n\n  const saveUpdate = e => {\n    e.preventDefault(); // How can we update the animal information?\n    // Where can we get the ID? \n    // Where is the information stored?\n  };\n\n  const deleteAnimal = animal => {// How can we delete an animal?\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animals-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"organized\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, animals.map(animal => /*#__PURE__*/React.createElement(\"li\", {\n    key: animal.name,\n    onClick: () => editAnimal(animal),\n    className: \"edit-animals\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: e => {\n      e.stopPropagation();\n      deleteAnimal(animal);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  }, \"X\"), \" \", animal.name)))), updating && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: saveUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Update Animal\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"Name:\", /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setAnimalToUpdate({ ...animalToUpdate,\n      name: e.target.value\n    }),\n    value: animalToUpdate.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Sound:\", /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setAnimalToUpdate({ ...animalToUpdate,\n      sound: e.target.value\n    }),\n    value: animalToUpdate.sound,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Classification:\", /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setAnimalToUpdate({ ...animalToUpdate,\n      classification: {\n        species: e.target.value\n      }\n    }),\n    value: animalToUpdate.classification.species,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setUpdating(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"Cancel\"))));\n}","map":{"version":3,"sources":["/Users/marks/lambdaschool2/Advanced-Web-Applications/animals/src/components/AnimalForm.js"],"names":["React","useState","initialAnimal","name","sound","classification","species","AnimalForm","animals","updateAnimals","updating","setUpdating","animalToUpdate","setAnimalToUpdate","editAnimal","animal","saveUpdate","e","preventDefault","deleteAnimal","map","stopPropagation","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst initialAnimal = {\n    name: '',\n    sound: '',\n    classification: { species:'' }\n}\n\nexport default function AnimalForm({animals, updateAnimals }) {\n\n    const [ updating, setUpdating ] = useState(false);\n    const [animalToUpdate, setAnimalToUpdate] = useState(initialAnimal);\n\n    const editAnimal = animal => {\n        setUpdating(true);\n        setAnimalToUpdate(animal);\n    }\n\n    const saveUpdate = e => {\n        e.preventDefault();\n        // How can we update the animal information?\n        // Where can we get the ID? \n        // Where is the information stored?\n    }\n\n    const deleteAnimal = animal => {\n        // How can we delete an animal?\n    }\n\n    return (\n        <div className=\"animals-list\">\n            <ul className=\"organized\">\n                {animals.map(animal => (\n                    <li key={animal.name} onClick={() => editAnimal(animal)} className=\"edit-animals\">\n                        <span>\n                            <span onClick={e => {\n                                    e.stopPropagation();\n                                    deleteAnimal(animal)\n                                }\n                            } >\n                                X\n                            </span>{\" \"}\n                            {animal.name}\n                        </span>\n                    </li>\n                ))}\n            </ul>\n            { updating && (\n                <form onSubmit={saveUpdate}>\n                    <legend>Update Animal</legend>\n                    <label>\n                        Name:\n                        <input \n                            onChange={e =>\n                                setAnimalToUpdate({ ...animalToUpdate, name: e.target.value })\n                            }\n                            value={animalToUpdate.name}\n                        />\n                    </label>\n                    <label>\n                        Sound:\n                        <input \n                            onChange={e =>\n                                setAnimalToUpdate({ ...animalToUpdate, sound: e.target.value })\n                            }\n                            value={animalToUpdate.sound}\n                        />\n                    </label>\n                    <label>\n                        Classification:\n                        <input \n                            onChange={e =>\n                                setAnimalToUpdate({ \n                                    ...animalToUpdate, \n                                    classification: { species: e.target.value }\n                                })\n                            }\n                            value={animalToUpdate.classification.species}\n                        />\n                    </label>\n                    <div>\n                        <button type=\"submit\">Update</button>\n                        <button onClick={() => setUpdating(false)}>Cancel</button>\n                    </div>\n                </form>\n            )}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}